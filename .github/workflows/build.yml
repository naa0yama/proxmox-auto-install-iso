---
name: Build
on:
  # push:
  #  branches:
  #    - main
  pull_request:
    branches:
      - main
    types:
      - closed
      - opened
      - reopened
      - synchronize
      - auto_merge_enabled
  workflow_dispatch:
    inputs:
      pve_version:
        required: true
        default: "8.2-2"
        description: Proxmox VE version
        type: string

      pve_sha256:
        required: true
        default: "c96ad84eacbbcef299ab8f407f9602f832abb5ceb08a9aa288c1e1164df2da97"
        description: Proxmox VE SHA256
        type: string

      rebuild:
        description: "Re build container?"
        required: true
        default: "false"
        type: choice
        options:
          - "true"
          - "false"
      no-cache:
        description: "Build docker images with no cache"
        default: false
        required: false
        type: boolean

jobs:
  builds:
    name: Container build
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      contents: read
      packages: write
    env:
      COMMIT_SHORT_SHA: null

    steps:
      - name: Checkout from repository
        uses: actions/checkout@v4.2.0

      - name: Set short git commit SHA
        run: |+
          set -eux

          calculatedSha=$(git rev-parse --short ${{ github.sha }})
          echo "COMMIT_SHORT_SHA=$calculatedSha" >> $GITHUB_ENV

      - uses: docker/metadata-action@v5
        id: meta
        with:
          images: ghcr.io/${{ github.repository }}
          tags: |
            # set latest tag for default branch
            type=raw,value=latest,enable={{is_default_branch}}

            # minimal (short sha)
            type=sha,enable=true,prefix=,format=short

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push
        uses: docker/build-push-action@v6.9.0
        with:
          context: .
          file: Dockerfile
          push: ${{ contains( github.event.pull_request.merged, true ) || inputs.rebuild == 'true' || github.event_name == 'workflow_dispatch' }}
          cache-from: type=gha
          cache-to: type=gha,mode=max
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          no-cache: ${{ inputs.no-cache == true }}

  release:
    name: ISO release
    runs-on: ubuntu-latest
    timeout-minutes: 5
    needs: [builds]
    if: ${{ github.event.pull_request.merged == true || github.event_name == 'workflow_dispatch' }}
    permissions:
      contents: write
      packages: write
    env:
      COMMIT_SHORT_SHA: null
      PROXMOX_VERSION: ${{ inputs.pve_version }}
      PROXMOX_ISO_SHA: ${{ inputs.pve_sha256 }}

    steps:
      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build auto install ISO from Proxmox VE
        run: |+
          set -eux

          docker pull ghcr.io/${{ github.repository }}
          docker run --rm -u $(id -u):$(id -g) -v $PWD/answers:/answers -v $PWD/dist:/dist tmp

      - name: Cleanup pre-releases
        uses: actions/github-script@v7.0.1
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |+
            const __prereleases = await github.rest.repos.listReleases({
              owner: context.repo.owner,
              repo: context.repo.repo,
              per_page: 100,
            });
            const prereleases = __prereleases.data

            for (const index in prereleases) {
              if (prereleases[index].prerelease == true || prereleases[index].draft == true) {
                console.log('delete ' + prereleases[index]['id'] + '\t' + prereleases[index]['name'])

                await github.rest.repos.deleteRelease({
                  owner: context.repo.owner,
                  repo: context.repo.repo,
                  release_id: prereleases[index]['id'],
                });
              }
            }

            console.log('end run')

      - name: Calculate the sha256sum
        working-directory: dist
        run: |+
          set -eux

          sha256sum proxmox-ve_${PROXMOX_VERSION}_auto_* > sha256sum.txt
          ls -lah .

      - name: Pre-Release
        uses: softprops/action-gh-release@v2
        with:
          name: Proxmox VE ${{ env.PROXMOX_VERSION }} ${{ env.COMMIT_SHORT_SHA }}
          tag_name: ${{ env.COMMIT_SHORT_SHA }}
          generate_release_notes: true
          draft: true
          prerelease: false
          make_latest: true
          files: |
            ./dist/proxmox-ve_${{ env.PROXMOX_VERSION }}_auto_*.iso
            ./dist/sha256sum.txt